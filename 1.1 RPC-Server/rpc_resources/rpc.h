/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct string_char {
	char *s;
	char c;
};
typedef struct string_char string_char;

struct string_int {
	char *s;
	int i;
};
typedef struct string_int string_int;

struct string_string {
	char *s1;
	char *s2;
};
typedef struct string_string string_string;

#define RPCSA01PROG 0x33221100
#define RPCSA01VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define vs_servername_at 1
extern  char * vs_servername_at_1(int *, CLIENT *);
extern  char * vs_servername_at_1_svc(int *, struct svc_req *);
#define vs_strlen 2
extern  int * vs_strlen_1(char **, CLIENT *);
extern  int * vs_strlen_1_svc(char **, struct svc_req *);
#define vs_count_char 3
extern  int * vs_count_char_1(string_char *, CLIENT *);
extern  int * vs_count_char_1_svc(string_char *, struct svc_req *);
#define vs_first_token 4
extern  char ** vs_first_token_1(string_char *, CLIENT *);
extern  char ** vs_first_token_1_svc(string_char *, struct svc_req *);
#define vs_restandindex_bychar 5
extern  string_int * vs_restandindex_bychar_1(string_char *, CLIENT *);
extern  string_int * vs_restandindex_bychar_1_svc(string_char *, struct svc_req *);
#define vs_splitat 6
extern  string_string * vs_splitat_1(string_int *, CLIENT *);
extern  string_string * vs_splitat_1_svc(string_int *, struct svc_req *);
#define vs_increment 7
extern  void * vs_increment_1(long *, CLIENT *);
extern  void * vs_increment_1_svc(long *, struct svc_req *);
#define vs_shutdown 8
extern  void * vs_shutdown_1(void *, CLIENT *);
extern  void * vs_shutdown_1_svc(void *, struct svc_req *);
extern int rpcsa01prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define vs_servername_at 1
extern  char * vs_servername_at_1();
extern  char * vs_servername_at_1_svc();
#define vs_strlen 2
extern  int * vs_strlen_1();
extern  int * vs_strlen_1_svc();
#define vs_count_char 3
extern  int * vs_count_char_1();
extern  int * vs_count_char_1_svc();
#define vs_first_token 4
extern  char ** vs_first_token_1();
extern  char ** vs_first_token_1_svc();
#define vs_restandindex_bychar 5
extern  string_int * vs_restandindex_bychar_1();
extern  string_int * vs_restandindex_bychar_1_svc();
#define vs_splitat 6
extern  string_string * vs_splitat_1();
extern  string_string * vs_splitat_1_svc();
#define vs_increment 7
extern  void * vs_increment_1();
extern  void * vs_increment_1_svc();
#define vs_shutdown 8
extern  void * vs_shutdown_1();
extern  void * vs_shutdown_1_svc();
extern int rpcsa01prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_string_char (XDR *, string_char*);
extern  bool_t xdr_string_int (XDR *, string_int*);
extern  bool_t xdr_string_string (XDR *, string_string*);

#else /* K&R C */
extern bool_t xdr_string_char ();
extern bool_t xdr_string_int ();
extern bool_t xdr_string_string ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_H_RPCGEN */
